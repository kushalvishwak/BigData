**************** BIG DATA *******************


import pyspark
import pandas as pd
import numpy as np
from collections import namedtuple as nt
from collections import Counter

orderspath="FileStore/tables/orders"
orderitemspath="FileStore/tables/order_items"
customersdatapath="FileStore/tables/customers"
departmentsdatapath="FileStore/tables/departments"
categoriesdatapath="FileStore/tables/categories"
productsdatapath="FileStore/tables/products"
file_type='csv'
ordersRDD=sc.textFile(orderspath)
orderitemsRDD=sc.textFile(orderitemspath)
x=ordersRDD.first()
orderitemsRDD.take(10)

Out[5]: ['1,1,957,1,299.98,299.98',
 '2,2,1073,1,199.99,199.99',
 '3,2,502,5,250.0,50.0',
 '4,2,403,1,129.99,129.99',
 '5,4,897,2,49.98,24.99',
 '6,4,365,5,299.95,59.99',
 '7,4,502,3,150.0,50.0',
 '8,4,1014,4,199.92,49.98',
 '9,5,957,1,299.98,299.98',
 '10,5,365,5,299.95,59.99']

neworderRDD=ordersRDD.map(lambda x:(x.split(",")[0],x.split(",")[1],x.split(",")[2],x.split(",")[3])).collect()
neworderRDD

Out[6]: [('1', '2013-07-25 00:00:00.0', '11599', 'CLOSED'),
 ('2', '2013-07-25 00:00:00.0', '256', 'PENDING_PAYMENT'),
 ('3', '2013-07-25 00:00:00.0', '12111', 'COMPLETE'),
 ('4', '2013-07-25 00:00:00.0', '8827', 'CLOSED'),
 ('5', '2013-07-25 00:00:00.0', '11318', 'COMPLETE'),
 ('6', '2013-07-25 00:00:00.0', '7130', 'COMPLETE'),
 ('7', '2013-07-25 00:00:00.0', '4530', 'COMPLETE'),
 ('8', '2013-07-25 00:00:00.0', '2911', 'PROCESSING'),
 ('9', '2013-07-25 00:00:00.0', '5657', 'PENDING_PAYMENT'),
 ('10', '2013-07-25 00:00:00.0', '5648', 'PENDING_PAYMENT'),
 ('11', '2013-07-25 00:00:00.0', '918', 'PAYMENT_REVIEW'),
 ('12', '2013-07-25 00:00:00.0', '1837', 'CLOSED'),
 ('13', '2013-07-25 00:00:00.0', '9149', 'PENDING_PAYMENT'),
 ('14', '2013-07-25 00:00:00.0', '9842', 'PROCESSING'),
 ('15', '2013-07-25 00:00:00.0', '2568', 'COMPLETE'),
 ('16', '2013-07-25 00:00:00.0', '7276', 'PENDING_PAYMENT'),
 ('17', '2013-07-25 00:00:00.0', '2667', 'COMPLETE'),
 ('18', '2013-07-25 00:00:00.0', '1205', 'CLOSED'),
 ('19', '2013-07-25 00:00:00.0', '9488', 'PENDING_PAYMENT'),
 ('20', '2013-07-25 00:00:00.0', '9198', 'PROCESSING'),
 ('21', '2013-07-25 00:00:00.0', '2711', 'PENDING'),
 ('22', '2013-07-25 00:00:00.0', '333', 'COMPLETE'),
 ('23', '2013-07-25 00:00:00.0', '4367', 'PENDING_PAYMENT'),
 ('24', '2013-07-25 00:00:00.0', '11441', 'CLOSED'),
 ('25', '2013-07-25 00:00:00.0', '9503', 'CLOSED'),
 ('26', '2013-07-25 00:00:00.0', '7562', 'COMPLETE'),
 ('27', '2013-07-25 00:00:00.0', '3241', 'PENDING_PAYMENT'),
 ('28', '2013-07-25 00:00:00.0', '656', 'COMPLETE'),
 ('29', '2013-07-25 00:00:00.0', '196', 'PROCESSING'),
 ('30', '2013-07-25 00:00:00.0', '10039', 'PENDING_PAYMENT'),
 ('31', '2013-07-25 00:00:00.0', '6983', 'PAYMENT_REVIEW'),
 ('32', '2013-07-25 00:00:00.0', '3960', 'COMPLETE'),
 ('33', '2013-07-25 00:00:00.0', '5793', 'PENDING_PAYMENT'),
 ('34', '2013-07-25 00:00:00.0', '4189', 'PROCESSING'),
 ('35', '2013-07-25 00:00:00.0', '4840', 'COMPLETE'),
 ('36', '2013-07-25 00:00:00.0', '5649', 'PENDING'),
 ('37', '2013-07-25 00:00:00.0', '5863', 'CLOSED'),
 ('38', '2013-07-25 00:00:00.0', '11586', 'PROCESSING'),
 ('39', '2013-07-25 00:00:00.0', '8214', 'PENDING'),
 ('40', '2013-07-25 00:00:00.0', '12092', 'PENDING_PAYMENT'),
 ('41', '2013-07-25 00:00:00.0', '8136', 'PENDING_PAYMENT')


Orders=nt('Orders',['SerialNo','Date','OrderId','Status'])
infer_schema = 'False'
first_row_is_header = 'False'
delimiter =","
df = spark.read.format(file_type)\
      .option("inferSchema",infer_schema)\
      .option("header",first_row_is_header)\
      .option("sep",delimiter)\
      .load(orderspath)
df1 = df.withColumnRenamed("_c0", "Serial")\
       .withColumnRenamed("_c1", "Date")\
       .withColumnRenamed("_c2", "OrderId")\
       .withColumnRenamed("_c3", "Status")

ord=[]
for i in range (len(neworderRDD)):
  a=Orders(neworderRDD[i][0],neworderRDD[i][1],neworderRDD[i][2],neworderRDD[i][3])
  ord.append(a)
print(ord)

Orders_items=nt('Orders_items',['SNo','CustomerId','OrderId','Quantity','Revenue','Price'])
itemRDD=orderitemsRDD.map(lambda x:(x.split(",")[0],x.split(",")[1],x.split(",")[2],x.split(",")[3],x.split(",")[4],x.split(",")[5])).collect()
itemRDD

Out[13]: [('1', '1', '957', '1', '299.98', '299.98'),
 ('2', '2', '1073', '1', '199.99', '199.99'),
 ('3', '2', '502', '5', '250.0', '50.0'),
 ('4', '2', '403', '1', '129.99', '129.99'),
 ('5', '4', '897', '2', '49.98', '24.99'),
 ('6', '4', '365', '5', '299.95', '59.99'),
 ('7', '4', '502', '3', '150.0', '50.0'),
 ('8', '4', '1014', '4', '199.92', '49.98'),
 ('9', '5', '957', '1', '299.98', '299.98'),
 ('10', '5', '365', '5', '299.95', '59.99'),
 ('11', '5', '1014', '2', '99.96', '49.98'),
 ('12', '5', '957', '1', '299.98', '299.98'),
 ('13', '5', '403', '1', '129.99', '129.99'),
 ('14', '7', '1073', '1', '199.99', '199.99'),
 ('15', '7', '957', '1', '299.98', '299.98'),
 ('16', '7', '926', '5', '79.95', '15.99'),
 ('17', '8', '365', '3', '179.97', '59.99'),
 ('18', '8', '365', '5', '299.95', '59.99'),
 ('19', '8', '1014', '4', '199.92', '49.98'),
 ('20', '8', '502', '1', '50.0', '50.0'),
 ('21', '9', '191', '2', '199.98', '99.99'),
 ('22', '9', '1073', '1', '199.99', '199.99'),
 ('23', '9', '1073', '1', '199.99', '199.99'),
 ('24', '10', '1073', '1', '199.99', '199.99'),
 ('25', '10', '1014', '2', '99.96', '49.98'),
 ('26', '10', '403', '1', '129.99', '129.99'),
 ('27', '10', '917', '1', '21.99', '21.99'),
 ('28', '10', '1073', '1', '199.99', '199.99'),
 ('29', '11', '365', '1', '59.99', '59.99'),
 ('30', '11', '627', '4', '159.96', '39.99'),
 ('31', '11', '1014', '1', '49.98', '49.98'),
 ('32', '11', '191', '4', '399.96', '99.99'),
 ('33', '11', '1014', '5', '249.9', '49.98'),
 ('34', '12', '957', '1', '299.98', '299.98'),
 ('35', '12', '134', '4', '100.0', '25.0'),
 ('36', '12', '1014', '3', '149.94', '49.98'),
 ('37', '12', '191', '5', '499.95', '99.99'),
 ('38', '12', '502', '5', '250.0', '50.0'),
 ('39', '13', '276', '4', '127.96', '31.99'),
 ('40', '14', '1004', '1', '399.98', '399.98'),
 ('41', '14', '1014', '2', '99.96', '49.98'),
 ('42', '14', '502', '1', '50.0', '50.0'),
 ('43', '15', '502', '1', '50.0', '50.0'),
 ('44', '15', '1073', '1', '199.99', '199.99'),
 ('45', '15', '828', '3', '95.97', '31.99'),
 ('46', '15', '365', '3', '179.97', '59.99'),
 ('47', '15', '1004', '1', '399.98', '399.98'),
 ('48', '16', '365', '2', '119.98', '59.99'),
 ('49', '16', '365', '5', '299.95', '59.99'),
 ('50', '17', '810', '4', '79.96', '19.99'),
 ('51', '17', '1014', '2', '99.96', '49.98'),
 ('52', '17', '93', '3', '74.97', '24.99'),
 ('53', '17', '1073', '1', '199.99', '199.99'),
 ('54', '17', '365', '4', '239.96', '59.99'),
 ('55', '18', '1073', '1', '199.99', '199.99'),
 ('56', '18', '365', '2', '119.98', '59.99'),
 ('57', '18', '403', '1', '129.99', '129.99'),
 ('58', '19', '1004', '1', '399.98', '399.98'),
 ('59', '19', '957', '1', '299.98', '299.98'),
 ('60', '20', '502', '5', '250.0', '50.0'),
 ('61', '20', '1014', '4', '199.92', '49.98'),
 ('62', '20', '403', '1', '129.99', '129.99'),
 ('63', '20', '365', '5', '299.95', '59.99'),
 ('64', '21', '897', '3', '74.97', '24.99'),
 ('65', '21', '276', '4', '127.96', '31.99'),
 ('66', '21', '37', '2', '69.98', '34.99'),
 ('67', '21', '502', '2', '100.0', '50.0'),
 ('68', '23', '957', '1', '299.98', '299.98'),
 ('69', '24', '403', '1', '129.99', '129.99'),
 ('70', '24', '502', '1', '50.0', '50.0'),
 ('71', '24', '502', '5', '250.0', '50.0'),
 ('72', '24', '1073', '1', '199.99', '199.99'),
 ('73', '24', '1073', '1', '199.99', '199.99'),
 ('74', '25', '1004', '1', '399.98', '399.98'),
 ('75', '27', '502', '3', '150.0', '50.0'),
 ('76', '27', '1073', '1', '199.99', '199.99'),
 ('77', '27', '1004', '1', '399.98', '399.98'),
 ('78', '28', '191', '4', '399.96', '99.99'),
 ('79', '28', '957', '1', '299.98', '299.98'),
 ('80', '28', '957', '1', '299.98', '299.98'),
 ('81', '28', '191', '1', '99.99', '99.99'),
 ('82', '28', '365', '1', '59.99', '59.99'),
 ('83', '29', '1073', '1', '199.99', '199.99'),
 ('84', '29', '1014', '5', '249.9', '49.98'),
 ('85', '29', '403', '1', '129.99', '129.99'),
 ('86', '29', '403', '1', '129.99', '129.99'),
 ('87', '29', '1004', '1', '399.98', '399.98'),
 ('88', '30', '502', '2', '100.0', '50.0'),
 ('89', '31', '191', '5', '499.95', '99.99'),
 ('90', '33', '403', '1', '129.99', '129.99'),
 ('91', '33', '1073', '1', '199.99', '199.99'),
 ('92', '33', '403', '1', '129.99', '129.99'),
 ('93', '33', '1014', '4', '199.92', '49.98'),
 ('94', '34', '957', '1', '299.98', '299.98'),
 ('95', '35', '403', '1', '129.99', '129.99'),
 ('96', '36', '502', '2', '100.0', '50.0'),
 ('97', '36', '957', '1', '299.98', '299.98'),
 ('98', '36', '1004', '1', '399.98', '399.98'),
 ('99', '37', '365', '1', '59.99', '59.99'),
 ('100', '37', '906', '4', '99.96', '24.99'),
 ('101', '38', '627', '4', '159.96', '39.99'),
 ('102', '38', '502', '4', '200.0', '50.0'),
 ('103', '39', '1073', '1', '199.99', '199.99'),
 ('104', '41', '1014', '4', '199.92', '49.98'),
 ('105', '41', '825', '4', '127.96', '31.99'),
 ('106', '42', '627', '1', '39.99', '39.99'),
 ('107', '42', '365', '5', '299.95', '59.99'),
 ('108', '42', '1004', '1', '399.98', '399.98'),
 ('109', '43', '957', '1', '299.98', '299.98'),
 ('110', '43', '191', '1', '99.99', '99.99'),
 ('111', '43', '403', '1', '129.99', '129.99'),
 ('112', '44', '1004', '1', '399.98', '399.98'),
 ('113', '45', '627', '5', '199.95', '39.99'),
 ('114', '45', '627', '4', '159.96', '39.99'),
 ('115', '45', '924', '5', '79.95', '15.99'),
 ('116', '45', '365', '1', '59.99', '59.99'),
 ('117', '46', '403', '1', '129.99', '129.99'),
 ('118', '46', '1014', '2', '99.96', '49.98'),
 ('119', '48', '1014', '1', '49.98', '49.98'),
 ('120', '48', '886', '2', '49.98', '24.99'),
 ('121', '49', '957', '1', '299.98', '299.98'),
 ('122', '49', '365', '2', '119.98', '59.99'),
 ('123', '49', '403', '1', '129.99', '129.99'),
 ('124', '50', '403', '1', '129.99', '129.99'),
 ('125', '50', '957', '1', '299.98', '299.98'),
 ('126', '51', '502', '1', '50.0', '50.0'),
 ('127', '51', '1004', '1', '399.98', '399.98'),
 ('128', '52', '1014', '5', '249.9', '49.98'),
 ('129', '52', '1014', '3', '149.94', '49.98'),
 ('130', '56', '1073', '1', '199.99', '199.99'),
 ('131', '56', '1014', '4', '199.92', '49.98'),
 ('132', '56', '957', '1', '299.98', '299.98'),
 ('133', '57', '365', '3', '179.97', '59.99'),
 ('134', '57', '365', '2', '119.98', '59.99'),
 ('135', '57', '403', '1', '129.99', '129.99'),
 ('136', '57', '821', '4', '207.96', '51.99'),
 ('137', '58', '775', '2', '19.98', '9.99'),
 ('138', '58', '502', '1', '50.0', '50.0'),
 ('139', '58', '1004', '1', '399.98', '399.98'),
 ('140', '58', '1073', '1', '199.99', '199.99'),
 ('141', '58', '403', '1', '129.99', '129.99'),
 ('142', '59', '957', '1', '299.98', '299.98'),
 ('143', '59', '365', '1', '59.99', '59.99'),
 ('144', '59', '365', '1', '59.99', '59.99'),
 ('145', '59', '1073', '1', '199.99', '199.99'),
 ('146', '61', '365', '2', '119.98', '59.99'),
 ('147', '61', '365', '2', '119.98', '59.99'),
 ('148', '61', '191', '4', '399.96', '99.99'),
 ('149', '62', '1004', '1', '399.98', '399.98'),
 ('150', '62', '1004', '1', '399.98', '399.98'),
 ('151', '62', '957', '1', '299.98', '299.98'),
 ('152', '62', '502', '1', '50.0', '50.0'),
 ('153', '63', '1004', '1', '399.98', '399.98'),
 ('154', '63', '1014', '2', '99.96', '49.98'),
 ('155', '63', '1004', '1', '399.98', '399.98')

items=[]
for i in range (len(neworderRDD)):
  b=Orders_items(itemRDD[i][0],itemRDD[i][1],int(itemRDD[i][2]),int(itemRDD[i][3]),float(itemRDD[i][4]),float(itemRDD[i][5]))
  items.append(b)
items

Out[14]: [Orders_items(SNo='1', CustomerId='1', OrderId=957, Quantity=1, Revenue=299.98, Price=299.98),
 Orders_items(SNo='2', CustomerId='2', OrderId=1073, Quantity=1, Revenue=199.99, Price=199.99),
 Orders_items(SNo='3', CustomerId='2', OrderId=502, Quantity=5, Revenue=250.0, Price=50.0),
 Orders_items(SNo='4', CustomerId='2', OrderId=403, Quantity=1, Revenue=129.99, Price=129.99),
 Orders_items(SNo='5', CustomerId='4', OrderId=897, Quantity=2, Revenue=49.98, Price=24.99),
 Orders_items(SNo='6', CustomerId='4', OrderId=365, Quantity=5, Revenue=299.95, Price=59.99),
 Orders_items(SNo='7', CustomerId='4', OrderId=502, Quantity=3, Revenue=150.0, Price=50.0),
 Orders_items(SNo='8', CustomerId='4', OrderId=1014, Quantity=4, Revenue=199.92, Price=49.98),
 Orders_items(SNo='9', CustomerId='5', OrderId=957, Quantity=1, Revenue=299.98, Price=299.98),
 Orders_items(SNo='10', CustomerId='5', OrderId=365, Quantity=5, Revenue=299.95, Price=59.99),
 Orders_items(SNo='11', CustomerId='5', OrderId=1014, Quantity=2, Revenue=99.96, Price=49.98),
 Orders_items(SNo='12', CustomerId='5', OrderId=957, Quantity=1, Revenue=299.98, Price=299.98),
 Orders_items(SNo='13', CustomerId='5', OrderId=403, Quantity=1, Revenue=129.99, Price=129.99),
 Orders_items(SNo='14', CustomerId='7', OrderId=1073, Quantity=1, Revenue=199.99, Price=199.99),
 Orders_items(SNo='15', CustomerId='7', OrderId=957, Quantity=1, Revenue=299.98, Price=299.98),
 Orders_items(SNo='16', CustomerId='7', OrderId=926, Quantity=5, Revenue=79.95, Price=15.99),

items_RDD=sc.parallelize(items)

x=items_RDD.map(lambda x : (x[2],x[4])).groupByKey().mapValues(lambda x: sum(x) / len(x))
x.collect()

Out[18]: [(792, 45.85176470588228),
 (728, 206.4189189189189),
 (1073, 199.98999999999194),
 (897, 74.96999999999993),
 (825, 103.14017241379295),
 (905, 74.29912751677837),
 (977, 89.77775641025629),
 (273, 89.20390243902428),
 (249, 154.1736718749999),
 (793, 44.09961290322572),
 (810, 59.66712121212112),
 (906, 79.92833333333326),
 (778, 78.67222222222206),
 (642, 95.11627906976744),
 (818, 143.6145185185186),